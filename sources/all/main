#!/usr/bin/bash
#====================================================================
# Temporary Variables
#====================================================================
echo "        ${SOURCERY_SOURCES}/all/main"

rm -rf ${SOURCERY_ERRORS}/*

ERROR=0

SOURCERY_USR_DIR=${SOURCERY_SOURCES}/user

#####################################################################
# Functions
#####################################################################
export PATH
export PYTHONPATH

#######################################
# Add a non-null error to the errors array
# Globals:
#   errors
# Arguments:
#   error string
# Returns:
#   None
#######################################
add_error(){
    local error="$1"
    local file="${SOURCERY_ERRORS}/errors.log"
    if [ -n "${error}" ]; then
        ERROR=1
        if [ ! -f "$file" ]; then
            printf "*****ERRORS*****\n" > $file
            if [ "$USER" == "$TTY_OWNER" ]; then
                chmod 666 $file
            fi
        fi
        printf "\t${error}\n" >> $file
    fi
}

#######################################
# Only add to the PATH if it exists and if it is not already a member
# of PATH
# Globals:
#   PATH
#   path_duplicates
#   path_nonexistent
# Arguments:
#   directory string
# Returns:
#   None
#######################################
add_to_path(){
   local DIRECTORY="$1"
   local file="${SOURCERY_ERRORS}/path_non.log"
    if [ -d "${DIRECTORY}" ]; then
        if [[ ":${PATH}:" != *":${DIRECTORY}:"* ]]; then
            PATH="${PATH:+"${PATH}:"}${DIRECTORY}"
        fi
    else
        ERROR=1
        if [ ! -f "$file" ];then
            printf "*****NON-EXISTENT PATHS*****\n" > $file
            if [ "$USER" == "$TTY_OWNER" ]; then
                chmod 666 $file
            fi
        fi
        printf "\t${DIRECTORY}\n" >> $file 
    fi
}

#######################################
# Only add the directory to the pythonpath if it exists and if it is
# not already a member of PYTHONPATH
# Globals:
#   PYTHONPATH
#   py_path_duplicates
#   py_path_nonexistent
# Arguments:
#   directory string
# Returns:
#   None
#######################################
add_to_pythonpath(){
   local DIRECTORY=$1
   local file=${SOURCERY_ERRORS}/py_path_non.log
    if [ -d "${DIRECTORY}" ]; then
        if [[ ":${PYTHONPATH}:" != *":${DIRECTORY}:"* ]]; then
            PYTHONPATH="${PYTHONPATH:+"${PYTHONPATH}:"}${DIRECTORY}"
        fi
    else
        ERROR=1
        if [ ! -f "$file" ];then
            printf "*****NON-EXISTENT PYTHON PATHS*****\n" > $file
            if [ "$USER" == "$TTY_OWNER" ]; then
                chmod 666 $file
            fi
        fi
        printf "\t${DIRECTORY}\n" >> $file 
    fi
}



#====================================================================
# Additional Sources
#--------------------------------------------------------------------
source ${SOURCERY_SOURCES}/all/bashrc
source ${SOURCERY_SOURCES}/all/aliases

source ${SOURCERY_USR_DIR}/bashrc
source ${SOURCERY_USR_DIR}/aliases

host_settings_filename=`hostname`

if [ -e "${SOURCERY_SOURCES}/hosts/${host_settings_filename}" ]; then
    echo -e "\t${SOURCERY_SOURCES}/hosts/${host_settings_filename}"
    source ${SOURCERY_SOURCES}/hosts/${host_settings_filename}
else
    echo -e "\n****No source file found for this host."
fi



#====================================================================
# Gather up and print errors
#====================================================================

if [ "$ERROR" -eq 1 ]; then
    printf "***[SOURCERY ERRORS FOUND]***\n"
    printf "\tuse command \`sourcery.errors\` for details."
fi
